/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InlineResponse200DataChildren struct for InlineResponse200DataChildren
type InlineResponse200DataChildren struct {
	AllowIndexThreeParameters *bool    `json:"allow_index_three_parameters,omitempty"`
	Attach                    *string  `json:"attach,omitempty"`
	ChildId                   *float64 `json:"child_id,omitempty"`
	Count                     *int64   `json:"count,omitempty"`
	CountChildren             *float64 `json:"count_children,omitempty"`
	GoodsCount                *int64   `json:"goods_count,omitempty"`
	GoodsId                   *int64   `json:"goods_id,omitempty"`
	Href                      *string  `json:"href,omitempty"`
	Id                        int64    `json:"id"`
	IsAppendGoods             *bool    `json:"is_append_goods,omitempty"`
	IsRozetkaTop              *bool    `json:"is_rozetka_top,omitempty"`
	LeftKey                   *int64   `json:"left_key,omitempty"`
	Level                     *float64 `json:"level,omitempty"`
	Mpath                     *string  `json:"mpath,omitempty"`
	Name                      *string  `json:"name,omitempty"`
	ParentId                  *int64   `json:"parent_id,omitempty"`
	RightKey                  *int64   `json:"right_key,omitempty"`
	RzMpath                   *string  `json:"rz_mpath,omitempty"`
	Status                    *string  `json:"status,omitempty"`
	Title                     *string  `json:"title,omitempty"`
	TitlesMode                *string  `json:"titles_mode,omitempty"`
}

// NewInlineResponse200DataChildren instantiates a new InlineResponse200DataChildren object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200DataChildren(id int64) *InlineResponse200DataChildren {
	this := InlineResponse200DataChildren{}
	this.Id = id
	return &this
}

// NewInlineResponse200DataChildrenWithDefaults instantiates a new InlineResponse200DataChildren object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200DataChildrenWithDefaults() *InlineResponse200DataChildren {
	this := InlineResponse200DataChildren{}
	return &this
}

// GetAllowIndexThreeParameters returns the AllowIndexThreeParameters field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetAllowIndexThreeParameters() bool {
	if o == nil || o.AllowIndexThreeParameters == nil {
		var ret bool
		return ret
	}
	return *o.AllowIndexThreeParameters
}

// GetAllowIndexThreeParametersOk returns a tuple with the AllowIndexThreeParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetAllowIndexThreeParametersOk() (*bool, bool) {
	if o == nil || o.AllowIndexThreeParameters == nil {
		return nil, false
	}
	return o.AllowIndexThreeParameters, true
}

// HasAllowIndexThreeParameters returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasAllowIndexThreeParameters() bool {
	if o != nil && o.AllowIndexThreeParameters != nil {
		return true
	}

	return false
}

// SetAllowIndexThreeParameters gets a reference to the given bool and assigns it to the AllowIndexThreeParameters field.
func (o *InlineResponse200DataChildren) SetAllowIndexThreeParameters(v bool) {
	o.AllowIndexThreeParameters = &v
}

// GetAttach returns the Attach field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetAttach() string {
	if o == nil || o.Attach == nil {
		var ret string
		return ret
	}
	return *o.Attach
}

// GetAttachOk returns a tuple with the Attach field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetAttachOk() (*string, bool) {
	if o == nil || o.Attach == nil {
		return nil, false
	}
	return o.Attach, true
}

// HasAttach returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasAttach() bool {
	if o != nil && o.Attach != nil {
		return true
	}

	return false
}

// SetAttach gets a reference to the given string and assigns it to the Attach field.
func (o *InlineResponse200DataChildren) SetAttach(v string) {
	o.Attach = &v
}

// GetChildId returns the ChildId field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetChildId() float64 {
	if o == nil || o.ChildId == nil {
		var ret float64
		return ret
	}
	return *o.ChildId
}

// GetChildIdOk returns a tuple with the ChildId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetChildIdOk() (*float64, bool) {
	if o == nil || o.ChildId == nil {
		return nil, false
	}
	return o.ChildId, true
}

// HasChildId returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasChildId() bool {
	if o != nil && o.ChildId != nil {
		return true
	}

	return false
}

// SetChildId gets a reference to the given float64 and assigns it to the ChildId field.
func (o *InlineResponse200DataChildren) SetChildId(v float64) {
	o.ChildId = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetCount() int64 {
	if o == nil || o.Count == nil {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetCountOk() (*int64, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *InlineResponse200DataChildren) SetCount(v int64) {
	o.Count = &v
}

// GetCountChildren returns the CountChildren field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetCountChildren() float64 {
	if o == nil || o.CountChildren == nil {
		var ret float64
		return ret
	}
	return *o.CountChildren
}

// GetCountChildrenOk returns a tuple with the CountChildren field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetCountChildrenOk() (*float64, bool) {
	if o == nil || o.CountChildren == nil {
		return nil, false
	}
	return o.CountChildren, true
}

// HasCountChildren returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasCountChildren() bool {
	if o != nil && o.CountChildren != nil {
		return true
	}

	return false
}

// SetCountChildren gets a reference to the given float64 and assigns it to the CountChildren field.
func (o *InlineResponse200DataChildren) SetCountChildren(v float64) {
	o.CountChildren = &v
}

// GetGoodsCount returns the GoodsCount field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetGoodsCount() int64 {
	if o == nil || o.GoodsCount == nil {
		var ret int64
		return ret
	}
	return *o.GoodsCount
}

// GetGoodsCountOk returns a tuple with the GoodsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetGoodsCountOk() (*int64, bool) {
	if o == nil || o.GoodsCount == nil {
		return nil, false
	}
	return o.GoodsCount, true
}

// HasGoodsCount returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasGoodsCount() bool {
	if o != nil && o.GoodsCount != nil {
		return true
	}

	return false
}

// SetGoodsCount gets a reference to the given int64 and assigns it to the GoodsCount field.
func (o *InlineResponse200DataChildren) SetGoodsCount(v int64) {
	o.GoodsCount = &v
}

// GetGoodsId returns the GoodsId field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetGoodsId() int64 {
	if o == nil || o.GoodsId == nil {
		var ret int64
		return ret
	}
	return *o.GoodsId
}

// GetGoodsIdOk returns a tuple with the GoodsId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetGoodsIdOk() (*int64, bool) {
	if o == nil || o.GoodsId == nil {
		return nil, false
	}
	return o.GoodsId, true
}

// HasGoodsId returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasGoodsId() bool {
	if o != nil && o.GoodsId != nil {
		return true
	}

	return false
}

// SetGoodsId gets a reference to the given int64 and assigns it to the GoodsId field.
func (o *InlineResponse200DataChildren) SetGoodsId(v int64) {
	o.GoodsId = &v
}

// GetHref returns the Href field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetHref() string {
	if o == nil || o.Href == nil {
		var ret string
		return ret
	}
	return *o.Href
}

// GetHrefOk returns a tuple with the Href field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetHrefOk() (*string, bool) {
	if o == nil || o.Href == nil {
		return nil, false
	}
	return o.Href, true
}

// HasHref returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasHref() bool {
	if o != nil && o.Href != nil {
		return true
	}

	return false
}

// SetHref gets a reference to the given string and assigns it to the Href field.
func (o *InlineResponse200DataChildren) SetHref(v string) {
	o.Href = &v
}

// GetId returns the Id field value
func (o *InlineResponse200DataChildren) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InlineResponse200DataChildren) SetId(v int64) {
	o.Id = v
}

// GetIsAppendGoods returns the IsAppendGoods field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetIsAppendGoods() bool {
	if o == nil || o.IsAppendGoods == nil {
		var ret bool
		return ret
	}
	return *o.IsAppendGoods
}

// GetIsAppendGoodsOk returns a tuple with the IsAppendGoods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetIsAppendGoodsOk() (*bool, bool) {
	if o == nil || o.IsAppendGoods == nil {
		return nil, false
	}
	return o.IsAppendGoods, true
}

// HasIsAppendGoods returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasIsAppendGoods() bool {
	if o != nil && o.IsAppendGoods != nil {
		return true
	}

	return false
}

// SetIsAppendGoods gets a reference to the given bool and assigns it to the IsAppendGoods field.
func (o *InlineResponse200DataChildren) SetIsAppendGoods(v bool) {
	o.IsAppendGoods = &v
}

// GetIsRozetkaTop returns the IsRozetkaTop field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetIsRozetkaTop() bool {
	if o == nil || o.IsRozetkaTop == nil {
		var ret bool
		return ret
	}
	return *o.IsRozetkaTop
}

// GetIsRozetkaTopOk returns a tuple with the IsRozetkaTop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetIsRozetkaTopOk() (*bool, bool) {
	if o == nil || o.IsRozetkaTop == nil {
		return nil, false
	}
	return o.IsRozetkaTop, true
}

// HasIsRozetkaTop returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasIsRozetkaTop() bool {
	if o != nil && o.IsRozetkaTop != nil {
		return true
	}

	return false
}

// SetIsRozetkaTop gets a reference to the given bool and assigns it to the IsRozetkaTop field.
func (o *InlineResponse200DataChildren) SetIsRozetkaTop(v bool) {
	o.IsRozetkaTop = &v
}

// GetLeftKey returns the LeftKey field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetLeftKey() int64 {
	if o == nil || o.LeftKey == nil {
		var ret int64
		return ret
	}
	return *o.LeftKey
}

// GetLeftKeyOk returns a tuple with the LeftKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetLeftKeyOk() (*int64, bool) {
	if o == nil || o.LeftKey == nil {
		return nil, false
	}
	return o.LeftKey, true
}

// HasLeftKey returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasLeftKey() bool {
	if o != nil && o.LeftKey != nil {
		return true
	}

	return false
}

// SetLeftKey gets a reference to the given int64 and assigns it to the LeftKey field.
func (o *InlineResponse200DataChildren) SetLeftKey(v int64) {
	o.LeftKey = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetLevel() float64 {
	if o == nil || o.Level == nil {
		var ret float64
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetLevelOk() (*float64, bool) {
	if o == nil || o.Level == nil {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasLevel() bool {
	if o != nil && o.Level != nil {
		return true
	}

	return false
}

// SetLevel gets a reference to the given float64 and assigns it to the Level field.
func (o *InlineResponse200DataChildren) SetLevel(v float64) {
	o.Level = &v
}

// GetMpath returns the Mpath field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetMpath() string {
	if o == nil || o.Mpath == nil {
		var ret string
		return ret
	}
	return *o.Mpath
}

// GetMpathOk returns a tuple with the Mpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetMpathOk() (*string, bool) {
	if o == nil || o.Mpath == nil {
		return nil, false
	}
	return o.Mpath, true
}

// HasMpath returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasMpath() bool {
	if o != nil && o.Mpath != nil {
		return true
	}

	return false
}

// SetMpath gets a reference to the given string and assigns it to the Mpath field.
func (o *InlineResponse200DataChildren) SetMpath(v string) {
	o.Mpath = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *InlineResponse200DataChildren) SetName(v string) {
	o.Name = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetParentId() int64 {
	if o == nil || o.ParentId == nil {
		var ret int64
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetParentIdOk() (*int64, bool) {
	if o == nil || o.ParentId == nil {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasParentId() bool {
	if o != nil && o.ParentId != nil {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int64 and assigns it to the ParentId field.
func (o *InlineResponse200DataChildren) SetParentId(v int64) {
	o.ParentId = &v
}

// GetRightKey returns the RightKey field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetRightKey() int64 {
	if o == nil || o.RightKey == nil {
		var ret int64
		return ret
	}
	return *o.RightKey
}

// GetRightKeyOk returns a tuple with the RightKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetRightKeyOk() (*int64, bool) {
	if o == nil || o.RightKey == nil {
		return nil, false
	}
	return o.RightKey, true
}

// HasRightKey returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasRightKey() bool {
	if o != nil && o.RightKey != nil {
		return true
	}

	return false
}

// SetRightKey gets a reference to the given int64 and assigns it to the RightKey field.
func (o *InlineResponse200DataChildren) SetRightKey(v int64) {
	o.RightKey = &v
}

// GetRzMpath returns the RzMpath field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetRzMpath() string {
	if o == nil || o.RzMpath == nil {
		var ret string
		return ret
	}
	return *o.RzMpath
}

// GetRzMpathOk returns a tuple with the RzMpath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetRzMpathOk() (*string, bool) {
	if o == nil || o.RzMpath == nil {
		return nil, false
	}
	return o.RzMpath, true
}

// HasRzMpath returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasRzMpath() bool {
	if o != nil && o.RzMpath != nil {
		return true
	}

	return false
}

// SetRzMpath gets a reference to the given string and assigns it to the RzMpath field.
func (o *InlineResponse200DataChildren) SetRzMpath(v string) {
	o.RzMpath = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *InlineResponse200DataChildren) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetTitle() string {
	if o == nil || o.Title == nil {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetTitleOk() (*string, bool) {
	if o == nil || o.Title == nil {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasTitle() bool {
	if o != nil && o.Title != nil {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *InlineResponse200DataChildren) SetTitle(v string) {
	o.Title = &v
}

// GetTitlesMode returns the TitlesMode field value if set, zero value otherwise.
func (o *InlineResponse200DataChildren) GetTitlesMode() string {
	if o == nil || o.TitlesMode == nil {
		var ret string
		return ret
	}
	return *o.TitlesMode
}

// GetTitlesModeOk returns a tuple with the TitlesMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataChildren) GetTitlesModeOk() (*string, bool) {
	if o == nil || o.TitlesMode == nil {
		return nil, false
	}
	return o.TitlesMode, true
}

// HasTitlesMode returns a boolean if a field has been set.
func (o *InlineResponse200DataChildren) HasTitlesMode() bool {
	if o != nil && o.TitlesMode != nil {
		return true
	}

	return false
}

// SetTitlesMode gets a reference to the given string and assigns it to the TitlesMode field.
func (o *InlineResponse200DataChildren) SetTitlesMode(v string) {
	o.TitlesMode = &v
}

func (o InlineResponse200DataChildren) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowIndexThreeParameters != nil {
		toSerialize["allow_index_three_parameters"] = o.AllowIndexThreeParameters
	}
	if o.Attach != nil {
		toSerialize["attach"] = o.Attach
	}
	if o.ChildId != nil {
		toSerialize["child_id"] = o.ChildId
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	if o.CountChildren != nil {
		toSerialize["count_children"] = o.CountChildren
	}
	if o.GoodsCount != nil {
		toSerialize["goods_count"] = o.GoodsCount
	}
	if o.GoodsId != nil {
		toSerialize["goods_id"] = o.GoodsId
	}
	if o.Href != nil {
		toSerialize["href"] = o.Href
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if o.IsAppendGoods != nil {
		toSerialize["is_append_goods"] = o.IsAppendGoods
	}
	if o.IsRozetkaTop != nil {
		toSerialize["is_rozetka_top"] = o.IsRozetkaTop
	}
	if o.LeftKey != nil {
		toSerialize["left_key"] = o.LeftKey
	}
	if o.Level != nil {
		toSerialize["level"] = o.Level
	}
	if o.Mpath != nil {
		toSerialize["mpath"] = o.Mpath
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.ParentId != nil {
		toSerialize["parent_id"] = o.ParentId
	}
	if o.RightKey != nil {
		toSerialize["right_key"] = o.RightKey
	}
	if o.RzMpath != nil {
		toSerialize["rz_mpath"] = o.RzMpath
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Title != nil {
		toSerialize["title"] = o.Title
	}
	if o.TitlesMode != nil {
		toSerialize["titles_mode"] = o.TitlesMode
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200DataChildren struct {
	value *InlineResponse200DataChildren
	isSet bool
}

func (v NullableInlineResponse200DataChildren) Get() *InlineResponse200DataChildren {
	return v.value
}

func (v *NullableInlineResponse200DataChildren) Set(val *InlineResponse200DataChildren) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200DataChildren) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200DataChildren) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200DataChildren(val *InlineResponse200DataChildren) *NullableInlineResponse200DataChildren {
	return &NullableInlineResponse200DataChildren{value: val, isSet: true}
}

func (v NullableInlineResponse200DataChildren) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200DataChildren) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
