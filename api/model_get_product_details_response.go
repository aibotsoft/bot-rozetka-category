/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetProductDetailsResponse struct for GetProductDetailsResponse
type GetProductDetailsResponse struct {
	Data []GetProductDetailsResponseData `json:"data"`
}

// NewGetProductDetailsResponse instantiates a new GetProductDetailsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductDetailsResponse(data []GetProductDetailsResponseData) *GetProductDetailsResponse {
	this := GetProductDetailsResponse{}
	this.Data = data
	return &this
}

// NewGetProductDetailsResponseWithDefaults instantiates a new GetProductDetailsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductDetailsResponseWithDefaults() *GetProductDetailsResponse {
	this := GetProductDetailsResponse{}
	return &this
}

// GetData returns the Data field value
func (o *GetProductDetailsResponse) GetData() []GetProductDetailsResponseData {
	if o == nil {
		var ret []GetProductDetailsResponseData
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *GetProductDetailsResponse) GetDataOk() (*[]GetProductDetailsResponseData, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *GetProductDetailsResponse) SetData(v []GetProductDetailsResponseData) {
	o.Data = v
}

func (o GetProductDetailsResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["data"] = o.Data
	}
	return json.Marshal(toSerialize)
}

type NullableGetProductDetailsResponse struct {
	value *GetProductDetailsResponse
	isSet bool
}

func (v NullableGetProductDetailsResponse) Get() *GetProductDetailsResponse {
	return v.value
}

func (v *NullableGetProductDetailsResponse) Set(val *GetProductDetailsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductDetailsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductDetailsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductDetailsResponse(val *GetProductDetailsResponse) *NullableGetProductDetailsResponse {
	return &NullableGetProductDetailsResponse{value: val, isSet: true}
}

func (v NullableGetProductDetailsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductDetailsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


