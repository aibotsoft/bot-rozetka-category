/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetChildrenResponseDataTileConfig struct for GetChildrenResponseDataTileConfig
type GetChildrenResponseDataTileConfig struct {
	PossibleTemplates *[]string `json:"possible_templates,omitempty"`
	Template *string `json:"template,omitempty"`
	TemplateView *string `json:"template_view,omitempty"`
}

// NewGetChildrenResponseDataTileConfig instantiates a new GetChildrenResponseDataTileConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChildrenResponseDataTileConfig() *GetChildrenResponseDataTileConfig {
	this := GetChildrenResponseDataTileConfig{}
	return &this
}

// NewGetChildrenResponseDataTileConfigWithDefaults instantiates a new GetChildrenResponseDataTileConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChildrenResponseDataTileConfigWithDefaults() *GetChildrenResponseDataTileConfig {
	this := GetChildrenResponseDataTileConfig{}
	return &this
}

// GetPossibleTemplates returns the PossibleTemplates field value if set, zero value otherwise.
func (o *GetChildrenResponseDataTileConfig) GetPossibleTemplates() []string {
	if o == nil || o.PossibleTemplates == nil {
		var ret []string
		return ret
	}
	return *o.PossibleTemplates
}

// GetPossibleTemplatesOk returns a tuple with the PossibleTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildrenResponseDataTileConfig) GetPossibleTemplatesOk() (*[]string, bool) {
	if o == nil || o.PossibleTemplates == nil {
		return nil, false
	}
	return o.PossibleTemplates, true
}

// HasPossibleTemplates returns a boolean if a field has been set.
func (o *GetChildrenResponseDataTileConfig) HasPossibleTemplates() bool {
	if o != nil && o.PossibleTemplates != nil {
		return true
	}

	return false
}

// SetPossibleTemplates gets a reference to the given []string and assigns it to the PossibleTemplates field.
func (o *GetChildrenResponseDataTileConfig) SetPossibleTemplates(v []string) {
	o.PossibleTemplates = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *GetChildrenResponseDataTileConfig) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildrenResponseDataTileConfig) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *GetChildrenResponseDataTileConfig) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *GetChildrenResponseDataTileConfig) SetTemplate(v string) {
	o.Template = &v
}

// GetTemplateView returns the TemplateView field value if set, zero value otherwise.
func (o *GetChildrenResponseDataTileConfig) GetTemplateView() string {
	if o == nil || o.TemplateView == nil {
		var ret string
		return ret
	}
	return *o.TemplateView
}

// GetTemplateViewOk returns a tuple with the TemplateView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChildrenResponseDataTileConfig) GetTemplateViewOk() (*string, bool) {
	if o == nil || o.TemplateView == nil {
		return nil, false
	}
	return o.TemplateView, true
}

// HasTemplateView returns a boolean if a field has been set.
func (o *GetChildrenResponseDataTileConfig) HasTemplateView() bool {
	if o != nil && o.TemplateView != nil {
		return true
	}

	return false
}

// SetTemplateView gets a reference to the given string and assigns it to the TemplateView field.
func (o *GetChildrenResponseDataTileConfig) SetTemplateView(v string) {
	o.TemplateView = &v
}

func (o GetChildrenResponseDataTileConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PossibleTemplates != nil {
		toSerialize["possible_templates"] = o.PossibleTemplates
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.TemplateView != nil {
		toSerialize["template_view"] = o.TemplateView
	}
	return json.Marshal(toSerialize)
}

type NullableGetChildrenResponseDataTileConfig struct {
	value *GetChildrenResponseDataTileConfig
	isSet bool
}

func (v NullableGetChildrenResponseDataTileConfig) Get() *GetChildrenResponseDataTileConfig {
	return v.value
}

func (v *NullableGetChildrenResponseDataTileConfig) Set(val *GetChildrenResponseDataTileConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChildrenResponseDataTileConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChildrenResponseDataTileConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChildrenResponseDataTileConfig(val *GetChildrenResponseDataTileConfig) *NullableGetChildrenResponseDataTileConfig {
	return &NullableGetChildrenResponseDataTileConfig{value: val, isSet: true}
}

func (v NullableGetChildrenResponseDataTileConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChildrenResponseDataTileConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


