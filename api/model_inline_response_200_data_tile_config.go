/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// InlineResponse200DataTileConfig struct for InlineResponse200DataTileConfig
type InlineResponse200DataTileConfig struct {
	PossibleTemplates *[]string `json:"possible_templates,omitempty"`
	Template          *string   `json:"template,omitempty"`
	TemplateView      *string   `json:"template_view,omitempty"`
}

// NewInlineResponse200DataTileConfig instantiates a new InlineResponse200DataTileConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineResponse200DataTileConfig() *InlineResponse200DataTileConfig {
	this := InlineResponse200DataTileConfig{}
	return &this
}

// NewInlineResponse200DataTileConfigWithDefaults instantiates a new InlineResponse200DataTileConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineResponse200DataTileConfigWithDefaults() *InlineResponse200DataTileConfig {
	this := InlineResponse200DataTileConfig{}
	return &this
}

// GetPossibleTemplates returns the PossibleTemplates field value if set, zero value otherwise.
func (o *InlineResponse200DataTileConfig) GetPossibleTemplates() []string {
	if o == nil || o.PossibleTemplates == nil {
		var ret []string
		return ret
	}
	return *o.PossibleTemplates
}

// GetPossibleTemplatesOk returns a tuple with the PossibleTemplates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataTileConfig) GetPossibleTemplatesOk() (*[]string, bool) {
	if o == nil || o.PossibleTemplates == nil {
		return nil, false
	}
	return o.PossibleTemplates, true
}

// HasPossibleTemplates returns a boolean if a field has been set.
func (o *InlineResponse200DataTileConfig) HasPossibleTemplates() bool {
	if o != nil && o.PossibleTemplates != nil {
		return true
	}

	return false
}

// SetPossibleTemplates gets a reference to the given []string and assigns it to the PossibleTemplates field.
func (o *InlineResponse200DataTileConfig) SetPossibleTemplates(v []string) {
	o.PossibleTemplates = &v
}

// GetTemplate returns the Template field value if set, zero value otherwise.
func (o *InlineResponse200DataTileConfig) GetTemplate() string {
	if o == nil || o.Template == nil {
		var ret string
		return ret
	}
	return *o.Template
}

// GetTemplateOk returns a tuple with the Template field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataTileConfig) GetTemplateOk() (*string, bool) {
	if o == nil || o.Template == nil {
		return nil, false
	}
	return o.Template, true
}

// HasTemplate returns a boolean if a field has been set.
func (o *InlineResponse200DataTileConfig) HasTemplate() bool {
	if o != nil && o.Template != nil {
		return true
	}

	return false
}

// SetTemplate gets a reference to the given string and assigns it to the Template field.
func (o *InlineResponse200DataTileConfig) SetTemplate(v string) {
	o.Template = &v
}

// GetTemplateView returns the TemplateView field value if set, zero value otherwise.
func (o *InlineResponse200DataTileConfig) GetTemplateView() string {
	if o == nil || o.TemplateView == nil {
		var ret string
		return ret
	}
	return *o.TemplateView
}

// GetTemplateViewOk returns a tuple with the TemplateView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineResponse200DataTileConfig) GetTemplateViewOk() (*string, bool) {
	if o == nil || o.TemplateView == nil {
		return nil, false
	}
	return o.TemplateView, true
}

// HasTemplateView returns a boolean if a field has been set.
func (o *InlineResponse200DataTileConfig) HasTemplateView() bool {
	if o != nil && o.TemplateView != nil {
		return true
	}

	return false
}

// SetTemplateView gets a reference to the given string and assigns it to the TemplateView field.
func (o *InlineResponse200DataTileConfig) SetTemplateView(v string) {
	o.TemplateView = &v
}

func (o InlineResponse200DataTileConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.PossibleTemplates != nil {
		toSerialize["possible_templates"] = o.PossibleTemplates
	}
	if o.Template != nil {
		toSerialize["template"] = o.Template
	}
	if o.TemplateView != nil {
		toSerialize["template_view"] = o.TemplateView
	}
	return json.Marshal(toSerialize)
}

type NullableInlineResponse200DataTileConfig struct {
	value *InlineResponse200DataTileConfig
	isSet bool
}

func (v NullableInlineResponse200DataTileConfig) Get() *InlineResponse200DataTileConfig {
	return v.value
}

func (v *NullableInlineResponse200DataTileConfig) Set(val *InlineResponse200DataTileConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineResponse200DataTileConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineResponse200DataTileConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineResponse200DataTileConfig(val *InlineResponse200DataTileConfig) *NullableInlineResponse200DataTileConfig {
	return &NullableInlineResponse200DataTileConfig{value: val, isSet: true}
}

func (v NullableInlineResponse200DataTileConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineResponse200DataTileConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
