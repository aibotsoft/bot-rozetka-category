/*
api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// GetProductsInCategoryResponseData struct for GetProductsInCategoryResponseData
type GetProductsInCategoryResponseData struct {
	ActivePages *[]float64 `json:"active_pages,omitempty"`
	Alternate *[]GetProductsInCategoryResponseDataAlternate `json:"alternate,omitempty"`
	GoodsInCategory *float64 `json:"goods_in_category,omitempty"`
	GoodsLimit *float64 `json:"goods_limit,omitempty"`
	GoodsWithFilter *float64 `json:"goods_with_filter,omitempty"`
	Ids *[]int64 `json:"ids,omitempty"`
	IdsCount *float64 `json:"ids_count,omitempty"`
	ShowNext *float64 `json:"show_next,omitempty"`
	ShownPage *float64 `json:"shown_page,omitempty"`
	TotalPages *float64 `json:"total_pages,omitempty"`
}

// NewGetProductsInCategoryResponseData instantiates a new GetProductsInCategoryResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetProductsInCategoryResponseData() *GetProductsInCategoryResponseData {
	this := GetProductsInCategoryResponseData{}
	return &this
}

// NewGetProductsInCategoryResponseDataWithDefaults instantiates a new GetProductsInCategoryResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetProductsInCategoryResponseDataWithDefaults() *GetProductsInCategoryResponseData {
	this := GetProductsInCategoryResponseData{}
	return &this
}

// GetActivePages returns the ActivePages field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetActivePages() []float64 {
	if o == nil || o.ActivePages == nil {
		var ret []float64
		return ret
	}
	return *o.ActivePages
}

// GetActivePagesOk returns a tuple with the ActivePages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetActivePagesOk() (*[]float64, bool) {
	if o == nil || o.ActivePages == nil {
		return nil, false
	}
	return o.ActivePages, true
}

// HasActivePages returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasActivePages() bool {
	if o != nil && o.ActivePages != nil {
		return true
	}

	return false
}

// SetActivePages gets a reference to the given []float64 and assigns it to the ActivePages field.
func (o *GetProductsInCategoryResponseData) SetActivePages(v []float64) {
	o.ActivePages = &v
}

// GetAlternate returns the Alternate field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetAlternate() []GetProductsInCategoryResponseDataAlternate {
	if o == nil || o.Alternate == nil {
		var ret []GetProductsInCategoryResponseDataAlternate
		return ret
	}
	return *o.Alternate
}

// GetAlternateOk returns a tuple with the Alternate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetAlternateOk() (*[]GetProductsInCategoryResponseDataAlternate, bool) {
	if o == nil || o.Alternate == nil {
		return nil, false
	}
	return o.Alternate, true
}

// HasAlternate returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasAlternate() bool {
	if o != nil && o.Alternate != nil {
		return true
	}

	return false
}

// SetAlternate gets a reference to the given []GetProductsInCategoryResponseDataAlternate and assigns it to the Alternate field.
func (o *GetProductsInCategoryResponseData) SetAlternate(v []GetProductsInCategoryResponseDataAlternate) {
	o.Alternate = &v
}

// GetGoodsInCategory returns the GoodsInCategory field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetGoodsInCategory() float64 {
	if o == nil || o.GoodsInCategory == nil {
		var ret float64
		return ret
	}
	return *o.GoodsInCategory
}

// GetGoodsInCategoryOk returns a tuple with the GoodsInCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetGoodsInCategoryOk() (*float64, bool) {
	if o == nil || o.GoodsInCategory == nil {
		return nil, false
	}
	return o.GoodsInCategory, true
}

// HasGoodsInCategory returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasGoodsInCategory() bool {
	if o != nil && o.GoodsInCategory != nil {
		return true
	}

	return false
}

// SetGoodsInCategory gets a reference to the given float64 and assigns it to the GoodsInCategory field.
func (o *GetProductsInCategoryResponseData) SetGoodsInCategory(v float64) {
	o.GoodsInCategory = &v
}

// GetGoodsLimit returns the GoodsLimit field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetGoodsLimit() float64 {
	if o == nil || o.GoodsLimit == nil {
		var ret float64
		return ret
	}
	return *o.GoodsLimit
}

// GetGoodsLimitOk returns a tuple with the GoodsLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetGoodsLimitOk() (*float64, bool) {
	if o == nil || o.GoodsLimit == nil {
		return nil, false
	}
	return o.GoodsLimit, true
}

// HasGoodsLimit returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasGoodsLimit() bool {
	if o != nil && o.GoodsLimit != nil {
		return true
	}

	return false
}

// SetGoodsLimit gets a reference to the given float64 and assigns it to the GoodsLimit field.
func (o *GetProductsInCategoryResponseData) SetGoodsLimit(v float64) {
	o.GoodsLimit = &v
}

// GetGoodsWithFilter returns the GoodsWithFilter field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetGoodsWithFilter() float64 {
	if o == nil || o.GoodsWithFilter == nil {
		var ret float64
		return ret
	}
	return *o.GoodsWithFilter
}

// GetGoodsWithFilterOk returns a tuple with the GoodsWithFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetGoodsWithFilterOk() (*float64, bool) {
	if o == nil || o.GoodsWithFilter == nil {
		return nil, false
	}
	return o.GoodsWithFilter, true
}

// HasGoodsWithFilter returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasGoodsWithFilter() bool {
	if o != nil && o.GoodsWithFilter != nil {
		return true
	}

	return false
}

// SetGoodsWithFilter gets a reference to the given float64 and assigns it to the GoodsWithFilter field.
func (o *GetProductsInCategoryResponseData) SetGoodsWithFilter(v float64) {
	o.GoodsWithFilter = &v
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetIds() []int64 {
	if o == nil || o.Ids == nil {
		var ret []int64
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetIdsOk() (*[]int64, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasIds() bool {
	if o != nil && o.Ids != nil {
		return true
	}

	return false
}

// SetIds gets a reference to the given []int64 and assigns it to the Ids field.
func (o *GetProductsInCategoryResponseData) SetIds(v []int64) {
	o.Ids = &v
}

// GetIdsCount returns the IdsCount field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetIdsCount() float64 {
	if o == nil || o.IdsCount == nil {
		var ret float64
		return ret
	}
	return *o.IdsCount
}

// GetIdsCountOk returns a tuple with the IdsCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetIdsCountOk() (*float64, bool) {
	if o == nil || o.IdsCount == nil {
		return nil, false
	}
	return o.IdsCount, true
}

// HasIdsCount returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasIdsCount() bool {
	if o != nil && o.IdsCount != nil {
		return true
	}

	return false
}

// SetIdsCount gets a reference to the given float64 and assigns it to the IdsCount field.
func (o *GetProductsInCategoryResponseData) SetIdsCount(v float64) {
	o.IdsCount = &v
}

// GetShowNext returns the ShowNext field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetShowNext() float64 {
	if o == nil || o.ShowNext == nil {
		var ret float64
		return ret
	}
	return *o.ShowNext
}

// GetShowNextOk returns a tuple with the ShowNext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetShowNextOk() (*float64, bool) {
	if o == nil || o.ShowNext == nil {
		return nil, false
	}
	return o.ShowNext, true
}

// HasShowNext returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasShowNext() bool {
	if o != nil && o.ShowNext != nil {
		return true
	}

	return false
}

// SetShowNext gets a reference to the given float64 and assigns it to the ShowNext field.
func (o *GetProductsInCategoryResponseData) SetShowNext(v float64) {
	o.ShowNext = &v
}

// GetShownPage returns the ShownPage field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetShownPage() float64 {
	if o == nil || o.ShownPage == nil {
		var ret float64
		return ret
	}
	return *o.ShownPage
}

// GetShownPageOk returns a tuple with the ShownPage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetShownPageOk() (*float64, bool) {
	if o == nil || o.ShownPage == nil {
		return nil, false
	}
	return o.ShownPage, true
}

// HasShownPage returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasShownPage() bool {
	if o != nil && o.ShownPage != nil {
		return true
	}

	return false
}

// SetShownPage gets a reference to the given float64 and assigns it to the ShownPage field.
func (o *GetProductsInCategoryResponseData) SetShownPage(v float64) {
	o.ShownPage = &v
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *GetProductsInCategoryResponseData) GetTotalPages() float64 {
	if o == nil || o.TotalPages == nil {
		var ret float64
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetProductsInCategoryResponseData) GetTotalPagesOk() (*float64, bool) {
	if o == nil || o.TotalPages == nil {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *GetProductsInCategoryResponseData) HasTotalPages() bool {
	if o != nil && o.TotalPages != nil {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given float64 and assigns it to the TotalPages field.
func (o *GetProductsInCategoryResponseData) SetTotalPages(v float64) {
	o.TotalPages = &v
}

func (o GetProductsInCategoryResponseData) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ActivePages != nil {
		toSerialize["active_pages"] = o.ActivePages
	}
	if o.Alternate != nil {
		toSerialize["alternate"] = o.Alternate
	}
	if o.GoodsInCategory != nil {
		toSerialize["goods_in_category"] = o.GoodsInCategory
	}
	if o.GoodsLimit != nil {
		toSerialize["goods_limit"] = o.GoodsLimit
	}
	if o.GoodsWithFilter != nil {
		toSerialize["goods_with_filter"] = o.GoodsWithFilter
	}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.IdsCount != nil {
		toSerialize["ids_count"] = o.IdsCount
	}
	if o.ShowNext != nil {
		toSerialize["show_next"] = o.ShowNext
	}
	if o.ShownPage != nil {
		toSerialize["shown_page"] = o.ShownPage
	}
	if o.TotalPages != nil {
		toSerialize["total_pages"] = o.TotalPages
	}
	return json.Marshal(toSerialize)
}

type NullableGetProductsInCategoryResponseData struct {
	value *GetProductsInCategoryResponseData
	isSet bool
}

func (v NullableGetProductsInCategoryResponseData) Get() *GetProductsInCategoryResponseData {
	return v.value
}

func (v *NullableGetProductsInCategoryResponseData) Set(val *GetProductsInCategoryResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableGetProductsInCategoryResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableGetProductsInCategoryResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetProductsInCategoryResponseData(val *GetProductsInCategoryResponseData) *NullableGetProductsInCategoryResponseData {
	return &NullableGetProductsInCategoryResponseData{value: val, isSet: true}
}

func (v NullableGetProductsInCategoryResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetProductsInCategoryResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


